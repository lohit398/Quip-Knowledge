import { Command, flags } from "@oclif/command";
import { ReleaseAppResponse } from "../lib/cli-api";
import { Manifest } from "../lib/types";
export declare enum ReleaseDestination {
    BETA = "beta",
    PROD = "prod"
}
interface ReleaseOpts {
    manifest: Manifest;
    destination: ReleaseDestination;
    build: number;
    json?: boolean;
    site: string;
    config: string;
    majorChanges?: string;
}
export declare const release: (opts: ReleaseOpts) => Promise<false | ReleaseAppResponse>;
export default class Release extends Command {
    static description: string;
    static flags: {
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        site: flags.IOptionFlag<string>;
        beta: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        prod: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        "major-changes": flags.IOptionFlag<string>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        config: flags.IOptionFlag<string>;
    };
    static args: {
        name: string;
        description: string;
        parse: (arg: string) => number;
    }[];
    run(): Promise<void>;
}
export {};
