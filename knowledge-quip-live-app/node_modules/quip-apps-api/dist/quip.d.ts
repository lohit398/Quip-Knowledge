import Auth_ from "./auth";
import BaseOAuth_ from "./base-oauth";
import Blob_ from "./blob";
import CanvasRecord_ from "./canvas-record";
import Client_, * as clientExports from "./client";
import ClientError_ from "./client-error";
import ImageRecord_ from "./image-record";
import OAuth1_ from "./oauth-1";
import OAuth2_ from "./oauth-2";
import Preferences_ from "./preferences";
import Record_ from "./record";
import RecordIndex_ from "./record-index";
import RecordList_ from "./record-list";
import registerMigration from "./register-migration";
import RichTextRecord_ from "./rich-text-record";
import RootRecord_ from "./root-record";
import * as ui from "./ui";
import UrlAuth_ from "./url-auth";
import User_ from "./user";
declare const quip: {
    apps: Client_ & typeof clientExports & {
        Auth: typeof Auth_;
        BaseOAuth: typeof BaseOAuth_;
        Blob: typeof Blob_;
        CanvasRecord: typeof CanvasRecord_;
        Record: typeof Record_;
        Entity: typeof Record_;
        ChildEntity: typeof Record_;
        ClientError: typeof ClientError_;
        ImageRecord: typeof ImageRecord_;
        ImageEntity: typeof ImageRecord_;
        OAuth1: typeof OAuth1_;
        OAuth2: typeof OAuth2_;
        Preferences: typeof Preferences_;
        RecordIndex: typeof RecordIndex_;
        RootRecord: typeof RootRecord_;
        RootEntity: typeof RootRecord_;
        RecordList: typeof RecordList_;
        RichTextRecord: typeof RichTextRecord_;
        RichTextEntity: typeof RichTextRecord_;
        UrlAuth: typeof UrlAuth_;
        User: typeof User_;
        ui: typeof ui;
        registerMigration: typeof registerMigration;
    };
    elements: Client_ & typeof clientExports & {
        Auth: typeof Auth_;
        BaseOAuth: typeof BaseOAuth_;
        Blob: typeof Blob_;
        CanvasRecord: typeof CanvasRecord_;
        Record: typeof Record_;
        Entity: typeof Record_;
        ChildEntity: typeof Record_;
        ClientError: typeof ClientError_;
        ImageRecord: typeof ImageRecord_;
        ImageEntity: typeof ImageRecord_;
        OAuth1: typeof OAuth1_;
        OAuth2: typeof OAuth2_;
        Preferences: typeof Preferences_;
        RecordIndex: typeof RecordIndex_;
        RootRecord: typeof RootRecord_;
        RootEntity: typeof RootRecord_;
        RecordList: typeof RecordList_;
        RichTextRecord: typeof RichTextRecord_;
        RichTextEntity: typeof RichTextRecord_;
        UrlAuth: typeof UrlAuth_;
        User: typeof User_;
        ui: typeof ui;
        registerMigration: typeof registerMigration;
    };
};
declare namespace quip {
}
export = quip;
//# sourceMappingURL=quip.d.ts.map