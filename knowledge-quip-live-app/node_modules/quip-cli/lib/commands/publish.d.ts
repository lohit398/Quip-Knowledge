import { Command, flags } from "@oclif/command";
import { Manifest } from "../lib/types";
export declare const createBundle: (manifest: Manifest, manifestPath: string, ignore: string) => Promise<{
    root: string;
    bundle: string[];
    missing: Map<string, Set<string>>;
}>;
export declare const doPublish: (manifest: Manifest, manifestPath: string, ignore: string, config: string, site: string, printJson: boolean) => Promise<Manifest | null>;
export default class Publish extends Command {
    static description: string;
    static flags: {
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        ignore: flags.IOptionFlag<string>;
        site: flags.IOptionFlag<string>;
        config: flags.IOptionFlag<string>;
    };
    static args: never[];
    run(): Promise<void>;
}
