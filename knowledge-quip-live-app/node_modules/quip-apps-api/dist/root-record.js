"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const record_1 = __importDefault(require("./record"));
const client_error_1 = __importDefault(require("./client-error"));
class RootRecord extends record_1.default {
    getParent() {
        throw new client_error_1.default("getParent() is not supported on the root record.");
    }
    getParentRecord() {
        throw new client_error_1.default("getParentRecord() is not supported on the root record.");
    }
    getContainingList() {
        throw new client_error_1.default("getContainingList() is not supported on the root record.");
    }
    setDeleted() {
        throw new client_error_1.default("setDeleted() is not supported on the root record.");
    }
    getPreviousSibling() {
        throw new client_error_1.default("getPreviousSibling() is not supported on the root record.");
    }
    getNextSibling() {
        throw new client_error_1.default("getNextSibling() is not supported on the root record.");
    }
    createSiblingAfter(recordParams) {
        throw new client_error_1.default("createSiblingAfter() is not supported on the root record.");
    }
    createSiblingBefore(recordParams) {
        throw new client_error_1.default("createSiblingBefore() is not supported on the root record.");
    }
}
exports.default = RootRecord;
//# sourceMappingURL=root-record.js.map