"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
// TODO: handle children in this file correctly (if they differ from current
// handling) so that trees will be snapshottable
class Backdrop extends react_1.Component {
    render() {
        return react_1.default.createElement("div", undefined, "ui.Backdrop");
    }
}
exports.Backdrop = Backdrop;
class Button extends react_1.Component {
    render() {
        return react_1.default.createElement("div", undefined, "ui.Button");
    }
}
exports.Button = Button;
class CalendarPicker extends react_1.Component {
    render() {
        return react_1.default.createElement("div", undefined, "ui.CalendarPicker");
    }
}
exports.CalendarPicker = CalendarPicker;
class Canvas extends react_1.Component {
    render() {
        return react_1.default.createElement("div", undefined, "ui.Canvas");
    }
}
exports.Canvas = Canvas;
exports.Color = {
    BACKGROUND: "#ffffff",
    SECONDARY_BACKGROUND: "#ffffff",
    TEXT: "#5c6470",
    SECONDARY_TEXT: "#8d95a1",
    ACTION: "#3d87f5",
    RED: "#ff3633",
    ORANGE: "#f26c0d",
    YELLOW: "#ffae00",
    GREEN: "#2cab21",
    BLUE: "#3d87f5",
    VIOLET: "#8d3df5",
    SELECTION: "#cadefc",
    WHITE: "#ffffff",
};
exports.ColorMap = {
    RED: {
        KEY: "RED",
        LABEL: "Red",
        VALUE: exports.Color.RED,
        VALUE_LIGHT: exports.Color.RED,
        VALUE_STROKE: exports.Color.RED,
    },
    ORANGE: {
        KEY: "ORANGE",
        LABEL: "Orange",
        VALUE: exports.Color.ORANGE,
        VALUE_LIGHT: exports.Color.ORANGE,
        VALUE_STROKE: exports.Color.ORANGE,
    },
    YELLOW: {
        KEY: "YELLOW",
        LABEL: "Yellow",
        VALUE: exports.Color.YELLOW,
        VALUE_LIGHT: exports.Color.YELLOW,
        VALUE_STROKE: exports.Color.YELLOW,
    },
    GREEN: {
        KEY: "GREEN",
        LABEL: "Green",
        VALUE: exports.Color.GREEN,
        VALUE_LIGHT: exports.Color.GREEN,
        VALUE_STROKE: exports.Color.GREEN,
    },
    BLUE: {
        KEY: "BLUE",
        LABEL: "Blue",
        VALUE: exports.Color.BLUE,
        VALUE_LIGHT: exports.Color.BLUE,
        VALUE_STROKE: exports.Color.BLUE,
    },
    VIOLET: {
        KEY: "VIOLET",
        LABEL: "Violet",
        VALUE: exports.Color.VIOLET,
        VALUE_LIGHT: exports.Color.VIOLET,
        VALUE_STROKE: exports.Color.VIOLET,
    },
    WHITE: {
        KEY: "WHITE",
        LABEL: "White",
        VALUE: exports.Color.WHITE,
        VALUE_LIGHT: exports.Color.WHITE,
        VALUE_STROKE: exports.Color.WHITE,
    },
};
class CommentsTrigger extends react_1.Component {
    render() {
        return react_1.default.createElement("div", undefined, "ui.CommentsTrigger");
    }
}
exports.CommentsTrigger = CommentsTrigger;
var ImageMode;
(function (ImageMode) {
    ImageMode[ImageMode["NONE"] = 0] = "NONE";
    ImageMode[ImageMode["FOCUSED"] = 1] = "FOCUSED";
    ImageMode[ImageMode["COMMENT"] = 2] = "COMMENT";
    ImageMode[ImageMode["CROP"] = 3] = "CROP";
})(ImageMode = exports.ImageMode || (exports.ImageMode = {}));
class Image extends react_1.Component {
    render() {
        return react_1.default.createElement("div", undefined, "ui.Image");
    }
}
exports.Image = Image;
class ProfilePicture extends react_1.Component {
    render() {
        return react_1.default.createElement("div", undefined, "ui.ProfilePicture");
    }
}
exports.ProfilePicture = ProfilePicture;
var Style;
(function (Style) {
    Style[Style["TEXT_PLAIN_STYLE"] = 0] = "TEXT_PLAIN_STYLE";
    Style[Style["TEXT_H1_STYLE"] = 1] = "TEXT_H1_STYLE";
    Style[Style["TEXT_H2_STYLE"] = 2] = "TEXT_H2_STYLE";
    Style[Style["TEXT_H3_STYLE"] = 3] = "TEXT_H3_STYLE";
    Style[Style["TEXT_CODE_STYLE"] = 4] = "TEXT_CODE_STYLE";
    Style[Style["LIST_BULLET_STYLE"] = 5] = "LIST_BULLET_STYLE";
    Style[Style["LIST_NUMBERED_STYLE"] = 6] = "LIST_NUMBERED_STYLE";
    Style[Style["LIST_CHECKLIST_STYLE"] = 7] = "LIST_CHECKLIST_STYLE";
    Style[Style["TABLE_BODY_STYLE"] = 8] = "TABLE_BODY_STYLE";
    Style[Style["TABLE_SPREADSHEET_STYLE"] = 13] = "TABLE_SPREADSHEET_STYLE";
    Style[Style["TABLE_ROW_STYLE"] = 9] = "TABLE_ROW_STYLE";
    Style[Style["TABLE_COL_STYLE"] = 10] = "TABLE_COL_STYLE";
    Style[Style["IMAGE_STYLE"] = 11] = "IMAGE_STYLE";
    Style[Style["FORMULA_STYLE"] = 12] = "FORMULA_STYLE";
    Style[Style["DEPRECATED_CHART_STYLE"] = 14] = "DEPRECATED_CHART_STYLE";
    Style[Style["TEXT_BLOCKQUOTE_STYLE"] = 16] = "TEXT_BLOCKQUOTE_STYLE";
    Style[Style["TEXT_PULL_QUOTE_STYLE"] = 17] = "TEXT_PULL_QUOTE_STYLE";
    Style[Style["HORIZONTAL_RULE_STYLE"] = 18] = "HORIZONTAL_RULE_STYLE";
    Style[Style["ELEMENT_BODY_STYLE"] = 19] = "ELEMENT_BODY_STYLE";
    Style[Style["ELEMENT_CHILD_STYLE"] = 20] = "ELEMENT_CHILD_STYLE";
    Style[Style["ELEMENT_BODY_STUB_STYLE"] = 25] = "ELEMENT_BODY_STUB_STYLE";
    Style[Style["LAYOUT_FLEXBOX_STYLE"] = 21] = "LAYOUT_FLEXBOX_STYLE";
    Style[Style["LAYOUT_GRID_STYLE"] = 23] = "LAYOUT_GRID_STYLE";
    Style[Style["SLIDE_STYLE"] = 22] = "SLIDE_STYLE";
    Style[Style["PRESENTATION_STYLE"] = 24] = "PRESENTATION_STYLE";
    Style[Style["LAYOUT_READER_NOTES_STYLE"] = 26] = "LAYOUT_READER_NOTES_STYLE";
    Style[Style["CHART_STYLE"] = 27] = "CHART_STYLE";
    Style[Style["SHAPE_STYLE"] = 29] = "SHAPE_STYLE";
    Style[Style["FEEDBACK_STICKER_STYLE"] = 30] = "FEEDBACK_STICKER_STYLE";
    Style[Style["LIVE_CHART_STYLE"] = 31] = "LIVE_CHART_STYLE";
    Style[Style["TASK_STYLE"] = 32] = "TASK_STYLE";
    Style[Style["VIDEO_STYLE"] = 33] = "VIDEO_STYLE";
    Style[Style["DASHBOARD_CHART_STYLE"] = 34] = "DASHBOARD_CHART_STYLE";
    Style[Style["LAYOUT_REFERENCED_STYLE"] = 35] = "LAYOUT_REFERENCED_STYLE";
})(Style = exports.Style || (exports.Style = {}));
class RichTextBox extends react_1.Component {
    render() {
        return react_1.default.createElement("div", undefined, "ui.RichTextBox");
    }
}
exports.RichTextBox = RichTextBox;
RichTextBox.InlineStyle = {
    BOLD: "editingStyle.BOLD",
    ITALIC: "editingStyle.ITALIC",
    UNDERLINE: "editingStyle.UNDERLINE",
    STRIKETHROUGH: "editingStyle.STRIKETHROUGH",
    CODE: "editingStyle.CODE",
};
class Spinner extends react_1.Component {
    render() {
        return react_1.default.createElement("div", undefined, "ui.Spinner");
    }
}
exports.Spinner = Spinner;
//# sourceMappingURL=ui.js.map